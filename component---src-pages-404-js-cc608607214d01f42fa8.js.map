{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","react__WEBPACK_IMPORTED_MODULE_1__","layout","className","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-cc608607214d01f42fa8.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { css } from \"linaria\";\nimport React from \"react\";\n\nexport const globals = css`\n  :global() {\n    html {\n      background-color: #fffcf5;\n    }\n\n    .post .bio {\n      @media screen and (min-width: 560px) {\n        flex-direction: row !important;\n      }\n    }\n\n    .index .bio {\n      @media screen and (max-width: 700px) and (min-width: 560px) {\n        flex-direction: row !important;\n      }\n    }\n\n    /* Inline Code */\n    :not(pre) > code[class*=\"language-\"] {\n      border-radius: 0.3em;\n      background: #1a1d27;\n      color: white;\n      padding: 0.15em 0.3em;\n    }\n\n    /**\n     * @TODO make sure this looks similiar to images and then get the lucy theme working\n     * Based on copypasta from Remy Bach, Sarah Drasner, Dan Abramov\n     * Theme is Lucy by Juliette Pr√©tot\n     * https://github.com/juliettepretot/lucy-vscode-theme\n     */\n    code[class*=\"language-\"],\n    pre[class*=\"language-\"] {\n      color: white;\n      background: none;\n      font-family: Consolas, Menlo, Monaco, source-code-pro, Courier New,\n        monospace;\n      font-feature-settings: normal;\n      text-align: left;\n      white-space: pre;\n      word-spacing: normal;\n      word-break: normal;\n      word-wrap: normal;\n      line-height: 1.5;\n      margin-bottom: 0;\n\n      -moz-tab-size: 4;\n      -o-tab-size: 4;\n      tab-size: 4;\n\n      -webkit-hyphens: none;\n      -moz-hyphens: none;\n      -ms-hyphens: none;\n      hyphens: none;\n    }\n\n    /* Code blocks */\n    pre[class*=\"language-\"] {\n      overflow: auto;\n      padding: 1.3125rem;\n    }\n\n    .token.attr-name {\n      color: green;\n    }\n\n    .token.comment {\n      color: #5e6173;\n      font-style: italic;\n    }\n\n    .token.string,\n    .token.url {\n      color: #e8d56d;\n    }\n\n    .token.variable {\n      color: green;\n    }\n\n    .token.number {\n      color: #af98e6;\n    }\n\n    .token.builtin,\n    .token.char,\n    .token.function {\n      color: #76c5a4;\n    }\n\n    .token.constant {\n      color: #56c9db;\n    }\n\n    .token.punctuation {\n      color: #88898f;\n    }\n\n    .token.selector,\n    .token.doctype {\n      color: green;\n    }\n\n    .token.class-name {\n      color: #56c9db;\n    }\n\n    .token.tag,\n    .token.operator,\n    .token.keyword {\n      color: #fb7da7;\n    }\n\n    .token.boolean {\n      color: #af98e6;\n    }\n\n    .token.property {\n      color: green;\n    }\n\n    .token.namespace {\n      color: green;\n    }\n\n    .token.deleted {\n      color: #fb7da7;\n    }\n\n    .token.inserted{\n      color: #76c5a4;\n    }\n\n    pre[data-line] {\n      padding: 1em 0 1em 3em;\n      position: relative;\n    }\n\n    .gatsby-highlight-code-line {\n      background-color: #2d303d;\n      display: block;\n      margin-left: -1.3125rem;\n      margin-right: -1.3125rem;\n      padding-left: calc(1.3125rem - 0.28rem);\n      border-left: 0.28em solid #fb7da7;\n    }\n\n    .gatsby-highlight {\n      margin-bottom: 1.75rem;\n\n      border-radius: 10px;\n      background: #1a1d27;\n      -webkit-overflow-scrolling: touch;\n      overflow: auto;\n\n      margin-left: calc(100% / 2 - 100vw / 2 )!important\n      margin-right: calc(100% / 2 - 100vw / 2 )!important\n      width: 100vw !important;\n\n      @media screen and (min-width: 700px) {\n        margin-left: -50px !important;\n        margin-right: -50px !important;\n        width: auto !import;\n        max-width: calc(700px - 1.75rem / 2) !important;\n      }\n    }\n\n    @media (max-width: 700px) {\n      .gatsby-highlight {\n        border-radius: 0;\n      }\n    }\n\n    .gatsby-highlight pre[class*=\"language-\"] {\n      float: left;\n      min-width: 100%;\n    }\n  }\n`;\n\nconst layout = css`\n  margin-bottom: 3.5rem;\n`;\n\nexport default function Layout(props) {\n  return <div className={layout}>{props.children}</div>;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: \"description\",\n                content: metaDescription\n              },\n              {\n                property: \"og:title\",\n                content: title\n              },\n              {\n                property: \"og:description\",\n                content: metaDescription\n              },\n              {\n                property: \"og:type\",\n                content: \"website\"\n              },\n              {\n                name: \"twitter:card\",\n                content: \"summary\"\n              },\n              {\n                name: \"twitter:creator\",\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: \"twitter:title\",\n                content: title\n              },\n              {\n                name: \"twitter:description\",\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: \"keywords\",\n                      content: keywords.join(\", \")\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: \"en\",\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}